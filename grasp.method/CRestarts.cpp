#include "CRestarts.h"

//----------------------------------------------------------------------------------
// 
//----------------------------------------------------------------------------------
void CRestartStrategy::MarkAt(const CStatistics &stats, bool improv)
{
	if (!improv)
	{
		lastMark = stats;
		improvMark = stats;
	}
	else
	{
		improvMark = stats;
	}
}

//----------------------------------------------------------------------------------
// 
//----------------------------------------------------------------------------------
CRestartByTime::CRestartByTime(double t)
{
	time = t;
}

//----------------------------------------------------------------------------------
// 
//----------------------------------------------------------------------------------
CRestartByTime::~CRestartByTime(void)
{
}

//----------------------------------------------------------------------------------
// 
//----------------------------------------------------------------------------------
bool CRestartByTime::isDone(const CStatistics &current)
{
	return (current.getElapsedTime() - lastMark.getElapsedTime() >= time);
}

//----------------------------------------------------------------------------------
// 
//----------------------------------------------------------------------------------
CRestartByIterations::CRestartByIterations(unsigned int it)
{
	iterations = it;
}

//----------------------------------------------------------------------------------
// 
//----------------------------------------------------------------------------------
CRestartByIterations::~CRestartByIterations(void)
{
}

//----------------------------------------------------------------------------------
// 
//----------------------------------------------------------------------------------
bool CRestartByIterations::isDone(const CStatistics &current)
{
	return (current.getIterations() - lastMark.getIterations() >= iterations);
}

//----------------------------------------------------------------------------------
// 
//----------------------------------------------------------------------------------
CRestartByNoImprove::CRestartByNoImprove(unsigned int k_it)
{
	k_interations = k_it;
}

//----------------------------------------------------------------------------------
// 
//----------------------------------------------------------------------------------
CRestartByNoImprove::~CRestartByNoImprove(void)
{
}

//----------------------------------------------------------------------------------
// 
//----------------------------------------------------------------------------------
bool CRestartByNoImprove::isDone(const CStatistics &current)
{
	return (current.getIterations() - improvMark.getIterations() > k_interations);
}